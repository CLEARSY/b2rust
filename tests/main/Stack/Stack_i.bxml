<?xml version="1.0" encoding="UTF-8" ?>
<Machine xmlns='https://www.atelierb.eu/Formats/bxml' version='1.0' name='Stack_i' type='implementation' position='false' semantic='true' b0check='false'>
    <Abstraction>Stack_r2</Abstraction>
    <Sees>
        <Referenced_Machine>
            <Name>b2rust_types</Name>
        </Referenced_Machine>
    </Sees>
    <Concrete_Variables>
        <Id value='Size_i' typref='1'/>
        <Id value='Contents_i' typref='4'/>
    </Concrete_Variables>
    <Invariant>
        <Nary_Pred op='&amp;'>
            <Exp_Comparison op=':'>
                <Id value='Contents_i' typref='4'/>
                <Binary_Exp op='--&gt;' typref='5'>
                    <Binary_Exp op='..' typref='2'>
                        <Integer_Literal value='0' typref='1'/>
                        <Integer_Literal value='9' typref='1'/>
                    </Binary_Exp>
                    <Id value='rust_i8' typref='2'/>
                </Binary_Exp>
            </Exp_Comparison>
            <Exp_Comparison op=':'>
                <Id value='Size_i' typref='1'/>
                <Id value='rust_i8' typref='2'/>
            </Exp_Comparison>
            <Exp_Comparison op='='>
                <Id value='Size_i' typref='1'/>
                <Id value='Size' typref='1'/>
            </Exp_Comparison>
            <Exp_Comparison op='='>
                <Id value='Contents_r2' typref='4'/>
                <Binary_Exp op=';' typref='4'>
                    <Id value='pred' typref='4'/>
                    <Id value='Contents_i' typref='4'/>
                </Binary_Exp>
            </Exp_Comparison>
        </Nary_Pred>
    </Invariant>
    <Initialisation>
        <Nary_Sub op=';'>
            <Assignement_Sub>
                <Variables>
                    <Id value='Size_i' typref='1'/>
                </Variables>
                <Values>
                    <Integer_Literal value='0' typref='1'/>
                </Values>
            </Assignement_Sub>
            <Assignement_Sub>
                <Variables>
                    <Id value='Contents_i' typref='4'/>
                </Variables>
                <Values>
                    <Binary_Exp op='*s' typref='4'>
                        <Binary_Exp op='..' typref='2'>
                            <Integer_Literal value='0' typref='1'/>
                            <Integer_Literal value='9' typref='1'/>
                        </Binary_Exp>
                        <Nary_Exp op='{' typref='2'>
                            <Integer_Literal value='0' typref='1'/>
                        </Nary_Exp>
                    </Binary_Exp>
                </Values>
            </Assignement_Sub>
        </Nary_Sub>
    </Initialisation>
    <Assertions>
        <Exp_Comparison op=':'>
            <Id value='pred' typref='4'/>
            <Binary_Exp op='+-&gt;' typref='5'>
                <Id value='INTEGER' typref='2'/>
                <Id value='INTEGER' typref='2'/>
            </Binary_Exp>
        </Exp_Comparison>
    </Assertions>
    <Operations>
        <Operation name='push'>
            <Input_Parameters>
                <Id value='value' typref='1'/>
            </Input_Parameters>
            <Body>
                <Nary_Sub op=';'>
                    <Assignement_Sub>
                        <Variables>
                            <Binary_Exp op='(' typref='1'>
                                <Id value='Contents_i' typref='4'/>
                                <Id value='Size_i' typref='1'/>
                            </Binary_Exp>
                        </Variables>
                        <Values>
                            <Id value='value' typref='1'/>
                        </Values>
                    </Assignement_Sub>
                    <Assignement_Sub>
                        <Variables>
                            <Id value='Size_i' typref='1'/>
                        </Variables>
                        <Values>
                            <Binary_Exp op='+i' typref='1'>
                                <Id value='Size_i' typref='1'/>
                                <Integer_Literal value='1' typref='1'/>
                            </Binary_Exp>
                        </Values>
                    </Assignement_Sub>
                </Nary_Sub>
            </Body>
        </Operation>
        <Operation name='pop'>
            <Output_Parameters>
                <Id value='value' typref='1'/>
            </Output_Parameters>
            <Body>
                <Nary_Sub op=';'>
                    <Assignement_Sub>
                        <Variables>
                            <Id value='Size_i' typref='1'/>
                        </Variables>
                        <Values>
                            <Binary_Exp op='-i' typref='1'>
                                <Id value='Size_i' typref='1'/>
                                <Integer_Literal value='1' typref='1'/>
                            </Binary_Exp>
                        </Values>
                    </Assignement_Sub>
                    <Assignement_Sub>
                        <Variables>
                            <Id value='value' typref='1'/>
                        </Variables>
                        <Values>
                            <Binary_Exp op='(' typref='1'>
                                <Id value='Contents_i' typref='4'/>
                                <Id value='Size_i' typref='1'/>
                            </Binary_Exp>
                        </Values>
                    </Assignement_Sub>
                </Nary_Sub>
            </Body>
        </Operation>
    </Operations>
    <TypeInfos>
<Type id='0'>
<Id value='BOOL'/>
</Type>
<Type id='1'>
<Id value='INTEGER'/>
</Type>
<Type id='2'>
<Unary_Exp op='POW'>
<Id value='INTEGER'/>
</Unary_Exp>
</Type>
<Type id='3'>
<Unary_Exp op='POW'>
<Unary_Exp op='POW'>
<Id value='INTEGER'/>
</Unary_Exp>
</Unary_Exp>
</Type>
    <Type id='4'>
        <Unary_Exp op='POW'>
<Binary_Exp op='*'>
<Id value='INTEGER'/>
<Id value='INTEGER'/>
</Binary_Exp>
</Unary_Exp>
        </Type>
    <Type id='5'>
        <Unary_Exp op='POW'>
<Unary_Exp op='POW'>
<Binary_Exp op='*'>
<Id value='INTEGER'/>
<Id value='INTEGER'/>
</Binary_Exp>
</Unary_Exp>
</Unary_Exp>
        </Type>
</TypeInfos>
    
</Machine>