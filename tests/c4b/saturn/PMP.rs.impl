pub struct PMP {
}

impl Default for PMP {
   fn default() -> Self {
     let mut instance = Self {
};
instance.initialisation();
instance}
}
impl PMP {
fn initialisation(&mut self) {
}

pub fn PMP_Init(&mut self) {
unimplemented!("PMP_Init is unimplemented");
}

pub fn PMP_InitPins(&mut self) {
unimplemented!("PMP_InitPins is unimplemented");
}

pub fn PMP_MAJCONFIGRP(&mut self) {
unimplemented!("PMP_MAJCONFIGRP is unimplemented");
}

pub fn PMP_MAJConf(&mut self, r#p_data: &u8) {
unimplemented!("PMP_MAJConf is unimplemented");
}

pub fn PMP_RecupConf(&mut self, r#p_data: &mut u8) {
unimplemented!("PMP_RecupConf is unimplemented");
}

pub fn PMP_CreateTrame(&mut self, r#p_data: &[u8; 256]) {
unimplemented!("PMP_CreateTrame is unimplemented");
}
}
